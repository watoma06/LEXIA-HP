/* ========================================
    Animation Keyframes
    ======================================== */

/* 1. フェードインアニメーション */
@keyframes fadeIn {
     from {
          opacity: 0;
          transform: translateY(20px);
     }
     to {
          opacity: 1;
          transform: translateY(0);
     }
}

/* 2. スライドインアニメーション（左から） */
@keyframes slideInLeft {
     from {
          opacity: 0;
          transform: translateX(-100px);
     }
     to {
          opacity: 1;
          transform: translateX(0);
     }
}

/* 3. スライドインアニメーション（右から） */
@keyframes slideInRight {
     from {
          opacity: 0;
          transform: translateX(100px);
     }
     to {
          opacity: 1;
          transform: translateX(0);
     }
}

/* 4. スケールアニメーション */
@keyframes scaleIn {
     from {
          opacity: 0;
          transform: scale(0.8);
     }
     to {
          opacity: 1;
          transform: scale(1);
     }
}

/* 5. 回転フェードイン */
@keyframes rotateIn {
     from {
          opacity: 0;
          transform: rotate(-180deg) scale(0.8);
     }
     to {
          opacity: 1;
          transform: rotate(0deg) scale(1);
     }
}

/* 6. バウンスイン */
@keyframes bounceIn {
     0% {
          opacity: 0;
          transform: scale(0.3);
     }
     50% {
          opacity: 1;
          transform: scale(1.05);
     }
     70% {
          transform: scale(0.9);
     }
     100% {
          opacity: 1;
          transform: scale(1);
     }
}

/* 7. タイピングエフェクト */
@keyframes typing {
     from {
          width: 0;
     }
     to {
          width: 100%;
     }
}

@keyframes blink {
     0%, 50% {
          border-color: transparent;
     }
     51%, 100% {
          border-color: var(--color-accent);
     }
}

/* 8. ワイプイン */
@keyframes wipeIn {
     from {
          clip-path: inset(0 100% 0 0);
     }
     to {
          clip-path: inset(0 0 0 0);
     }
}

/* 9. フリップイン */
@keyframes flipIn {
     from {
          opacity: 0;
          transform: perspective(400px) rotateY(-90deg);
     }
     40% {
          transform: perspective(400px) rotateY(-20deg);
     }
     60% {
          transform: perspective(400px) rotateY(10deg);
     }
     80% {
          transform: perspective(400px) rotateY(-5deg);
     }
     to {
          opacity: 1;
          transform: perspective(400px) rotateY(0deg);
     }
}

/* 10. パルスエフェクト */
@keyframes pulse {
     0% {
          transform: scale(1);
          box-shadow: 0 0 0 0 rgba(255, 107, 0, 0.7);
     }
     70% {
          transform: scale(1.05);
          box-shadow: 0 0 0 10px rgba(255, 107, 0, 0);
     }
     100% {
          transform: scale(1);
          box-shadow: 0 0 0 0 rgba(255, 107, 0, 0);
     }
}

@keyframes fadeOut {
     0% {
          opacity: 1;
     }
     100% {
          opacity: 0;
     }
}

@keyframes slideIn {
     0% {
          transform: translateY(-10px);
          opacity: 0;
     }
     100% {
          transform: translateY(0);
          opacity: 1;
     }
}

@keyframes slideOut {
     0% {
          transform: translateY(0);
          opacity: 1;
     }
     100% {
          transform: translateY(-10px);
          opacity: 0;
     }
}

@keyframes zoomIn {
     0% {
          transform: scale(0.9);
          opacity: 0;
     }
     100% {
          transform: scale(1);
          opacity: 1;
     }
}

@keyframes zoomOut {
     0% {
          transform: scale(1);
          opacity: 1;
     }
     100% {
          transform: scale(0.9);
          opacity: 0;
     }
}

@keyframes bounce {
     0%,
     100% {
          transform: translateY(0);
     }
     50% {
          transform: translateY(-10px);
     }
}

@keyframes rotate {
     0% {
          transform: rotate(0deg);
     }
     100% {
          transform: rotate(360deg);
     }
}

/* スケルトンローディングアニメーション */
@keyframes loading-skeleton {
     0% {
          background-position: -200% 0;
     }
     100% {
          background-position: 200% 0;
     }
}

/* ========================================
    Animation Classes
    ======================================== */

/* 基本的なアニメーションクラス（アニメーション削除後は常に表示） */
.animate-fade-in {
     opacity: 1;
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-slide-in-left {
     opacity: 1;
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-slide-in-right {
     opacity: 1;
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-scale-in {
     opacity: 1;
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-rotate-in {
     opacity: 1;     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-bounce-in {
     opacity: 1;
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-wipe-in {
     opacity: 1;
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-flip-in {
     opacity: 1;
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-pulse {
     animation: pulse 2s infinite;
     will-change: transform, box-shadow;
}

/* タイピングエフェクト用 */
.animate-typing {
     overflow: hidden;
     white-space: nowrap;
     border-right: 2px solid var(--color-accent);
     animation: blink 0.75s step-end infinite;
     will-change: width, border-color;
}

/* 遅延アニメーション */
.animate-delay-1 { animation-delay: calc(var(--animation-delay-base) * 1); }
.animate-delay-2 { animation-delay: calc(var(--animation-delay-base) * 2); }
.animate-delay-3 { animation-delay: calc(var(--animation-delay-base) * 3); }
.animate-delay-4 { animation-delay: calc(var(--animation-delay-base) * 4); }
.animate-delay-5 { animation-delay: calc(var(--animation-delay-base) * 5); }
.animate-delay-6 { animation-delay: calc(var(--animation-delay-base) * 6); }

/* ホバーアニメーション */
.animate-hover-scale {
     transition: transform var(--animation-duration-fast) var(--animation-easing);
     will-change: transform;
}

.animate-hover-scale:hover {
     transform: scale(1.05);
}

.animate-hover-lift {
     transition: transform var(--animation-duration-fast) var(--animation-easing), box-shadow var(--animation-duration-fast) var(--animation-easing);
     will-change: transform, box-shadow;
}

.animate-hover-lift:hover {
     transform: translateY(-5px);
     box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
}

/* スクロールトリガー用のクラス（アニメーション削除後は常に表示） */
.animate-on-scroll {
     opacity: 1;
     transform: translateY(0);
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

/* スクロールアニメーション初期状態（アニメーション削除後は常に表示） */
.animate-not-in-view {
     opacity: 1;
     transform: translateY(0);
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

/* ステガードアニメーション関連（アニメーション削除後は常に表示） */
.animate-stagger-item-hidden {
     opacity: 1;
     transform: translateY(0);
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-stagger-active .animate-stagger-item-hidden {
     animation: fadeIn var(--animation-duration-normal) var(--animation-easing) forwards;
}

.animate-stagger-active .animate-stagger-item-hidden:nth-child(1) { animation-delay: calc(var(--animation-delay-base) * 1); }
.animate-stagger-active .animate-stagger-item-hidden:nth-child(2) { animation-delay: calc(var(--animation-delay-base) * 2); }
.animate-stagger-active .animate-stagger-item-hidden:nth-child(3) { animation-delay: calc(var(--animation-delay-base) * 3); }
.animate-stagger-active .animate-stagger-item-hidden:nth-child(4) { animation-delay: calc(var(--animation-delay-base) * 4); }
.animate-stagger-active .animate-stagger-item-hidden:nth-child(5) { animation-delay: calc(var(--animation-delay-base) * 5); }
.animate-stagger-active .animate-stagger-item-hidden:nth-child(6) { animation-delay: calc(var(--animation-delay-base) * 6); }

/* ステガードアニメーション用（アニメーション削除後は常に表示） */
.animate-stagger > * {
     opacity: 1;
     transform: translateY(0);
     /* アニメーション無効化 - 要素を常に表示状態にする */
}

.animate-stagger > *:nth-child(1) { animation-delay: calc(var(--animation-delay-base) * 1); }
.animate-stagger > *:nth-child(2) { animation-delay: calc(var(--animation-delay-base) * 2); }
.animate-stagger > *:nth-child(3) { animation-delay: calc(var(--animation-delay-base) * 3); }
.animate-stagger > *:nth-child(4) { animation-delay: calc(var(--animation-delay-base) * 4); }
.animate-stagger > *:nth-child(5) { animation-delay: calc(var(--animation-delay-base) * 5); }
.animate-stagger > *:nth-child(6) { animation-delay: calc(var(--animation-delay-base) * 6); }

/* ========================================
    Performance Optimization Classes
    ======================================== */

/* 低パフォーマンス端末用の簡素化されたアニメーション */
.low-performance .animate-flip-in,
.low-performance .animate-rotate-in,
.low-performance .animate-bounce-in {
     animation: fadeIn var(--animation-duration-fast) ease forwards !important;
}

.low-performance .animate-stagger > * {
     animation-delay: 0s !important;
}

/* プリロード時の最適化 */
.preload * {
     animation-duration: 0s !important;
     animation-delay: 0s !important;
     transition-duration: 0s !important;
}

/* モーション設定を尊重 */
@media (prefers-reduced-motion: reduce) {
     .animate-fade-in,
     .animate-slide-in-left,
     .animate-slide-in-right,
     .animate-scale-in,
     .animate-rotate-in,
     .animate-bounce-in,
     .animate-wipe-in,
     .animate-flip-in,
     .animate-on-scroll,
     .animate-stagger > * {
          animation: none;
          opacity: 1;
          transform: none;
     }
     
     .animate-hover-scale:hover,
     .animate-hover-lift:hover {
          transform: none;
     }
}

/* タッチ操作の最適化 */
@media (hover: none) and (pointer: coarse) {
     .animate-hover-scale:hover,
     .animate-hover-lift:hover {
          transform: none;
     }
     
     .portfolio-item:hover,
     .featured-project-item:hover {
          transform: none;
          box-shadow: var(--box-shadow);
     }
     
     /* タッチ端末での代替インタラクション */
     .portfolio-item:active,
     .featured-project-item:active {
          transform: scale(0.98);
          transition: transform 0.1s ease;
     }
}